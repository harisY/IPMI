@model IPMI.Models.UserAndRolesDTO
@{
    ViewBag.Title = "Roles List";
    var no = 0;
}

<div class="row">
    <div class="col-xs-12">
        <div class="box box-primary">
            <div class="box-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.ActionLink("Back to edit user", "EditUser", new { UserName = Model.UserName }, new { @class = "btn btn-default" })
                                <input type="submit" value="Add Role" class="btn btn-primary" />
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownList("AddRole", null, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <hr />
                    <table id="table" class="table table-bordered table-striped table-condensed">
                        <thead style="color:blue">
                            <tr>
                                <th style="width:10px; text-align:center;">No</th>
                                <th>Role Name</th>
                                <th style="width:40px; text-align:center;">Action</th>
                            </tr>
                        </thead>
                        <tbody id="tbody">
                            @foreach (var item in Model.colUserRoleDTO)
                            {
                                no++;
                            <tr>
                                <td class="_i">@no</td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RoleName)
                                </td>
                                <td style="text-align:center;">
                                    @if (!((Model.UserName.ToLower() ==
                            this.User.Identity.Name.ToLower()) &&
                            item.RoleName == "Administrator") &&
                            item.RoleName != "No Roles Found")
                                    {
                                        @Html.ActionLink(" ", "DeleteRole", new { UserName = item.UserName, RoleName = item.RoleName },
                                            new { @class = "btn btn-xs btn-danger fa fa-trash", onclick = "return confirm('Are you sure you wish to delete this role?');" })
                                    }
                                </td>



                            </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            DataTable();
        })

        function DataTable() {
            $('#table').DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": true,
                "ordering": false,
                "info": true,
                "autoWidth": false
            });
        }

    </script>
}



@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <br />
        @Html.ValidationSummary(true,
        "",
        new { @class = "text-danger" })
        <div>
            @Html.ActionLink("Back",
           "EditUser",
           new { UserName = Model.UserName },
           new { @class = "btn btn-default" })
            <input type="submit" value="Add Role" class="btn btn-default" />
            @Html.DropDownList("AddRole")
        </div>
        <br />

        <table class="table">
            <tr>
                <th>
                    Existing Roles:
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.colUserRoleDTO)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.RoleName)
                    </td>
                    <td>
                        @if (!((Model.UserName.ToLower() ==
                                this.User.Identity.Name.ToLower()) &&
                                item.RoleName == "Administrator") &&
                                item.RoleName != "No Roles Found")
                        {
                            @Html.ActionLink("Delete", "DeleteRole",
                           new { UserName = item.UserName, RoleName = item.RoleName },
                            new
                            {
                                onclick =
                            "return confirm('Are you sure you wish to delete this role?');"
                            })
                        }
                    </td>
                </tr>
            }
        </table>
    }*@