@model IPMI.Models.ExpandedUserDTO
@using IPMI.Models
@{
    List<StandartComboBox> AddGroup = (List<StandartComboBox>)ViewData["Group"];
    List<StandartComboBox> AddLevel = (List<StandartComboBox>)ViewData["Level"];
    ViewBag.Title = "Users";
}

@using (Html.BeginForm())
            {
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                @Html.AntiForgeryToken()
                <div class="box-body">
                    <div class="form-horizontal">
                        <h4>Create User</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label class="col-md-1 control-label" style="text-align:left;">Nama</label>
                            <label class="col-md-1 control-label" >:</label>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.NameIdentifier,
                                        new { htmlAttributes = new { @class = "form-control", @id = "form_name" } })
                                @Html.ValidationMessageFor(model => model.NameIdentifier, "",
                                        new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-1 control-label" style="text-align:left;">Email</label>
                            <label class="col-md-1 control-label">:</label>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Email,
                                        new { htmlAttributes = new { @class = "form-control", @id = "form_emial" } })
                                @Html.ValidationMessageFor(model => model.Email, "",
                                        new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                            <label class="col-md-2 control-label text-muted" style="text-align:left;">Department</label>
                            <label class="col-md-1 control-label text-muted ">:</label>
                            <div class="col-md-5">
                                @Html.DropDownList("IdDept", null, new { @class = "form-control", @id = "form_partner", @onchange = "return PartnerIdOnChange()" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            <label class="col-md-1 control-label" style="text-align:left;">Department</label>
                            <label class="col-md-1 control-label">:</label>
                            <div class="col-md-5">
                                @Html.DropDownList("IdDept", null, new { @class = "form-control select2", @id = "form_IdDept" , @style ="width: 100%;" })
                            </div>
                        </div>

                        @*<div class="form-group">
                            <label class="col-md-2 control-label text-muted" style="text-align:left;">Group</label>
                            <label class="col-md-1 control-label text-muted ">:</label>
                            <div class="col-md-5">
                                @Html.DropDownList("IdGroup", null, new { @class = "form-control", @id = "form_group" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            <label class="col-md-1 control-label" style="text-align:left;">Password</label>
                            <label class="col-md-1 control-label">:</label>
                            <div class="col-md-5">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @id = "form_password" })
                                @Html.ValidationMessageFor(model => model.Password,
                                        "",
                                        new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-1 control-label" style="text-align:left;">Role</label>
                            <label class="col-md-1 control-label">:</label>
                            <div class="col-md-5">
                                @Html.DropDownList("Roles", null, new { @class = "form-control", @id = "form_role" })
                            </div>
                        </div>

                        <hr />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-5">
                                <button class="btn btn-primary" onclick="return Save()"><span class="fa fa-save"></span> Save</button>
                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    @section Scripts {
        <script>
            $(document).ready(function () {
                $('.select2').select2();
            });
            function Save() {
                var NameIdentifier = model => model.NameIdentifier;
                var Email = model => model.Email;
                var IdDept = model => model.IdDept;
                //var IdLevel = model => model.IdLevel;
                //var IdGroup = model => model.IdGroup;
                //var PartnerID = model => model.PartnerID;
                var Password = model => model.Password;
                var Roles = model => model.Roles;
                var url = "@Url.Action("Create","User")";
                var model = {
                    NameIdentifier: NameIdentifier,
                    Email: Email,
                    IdDept:IdDept,
                    //IdLevel: IdLevel,
                    //IdGroup: IdGroup,
                    //PartnerID: PartnerID,
                    Password: Password,
                    Roles: Roles
                };
                $.post(url, model);
            }

            function PartnerIdOnChange() {
                var Id = $("#form_partner").val();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetPartner", "User")',
                    data: {
                        Id: Id
                    },
                    success: function (result) {
                        $("#form_name").val(result.CompanyName);
                        $("#form_email").val(result.Email);
                    },
                    error: function () {
                    }
                });
            }
        </script>
    }
}



